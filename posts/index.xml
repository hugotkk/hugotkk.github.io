<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Hugo</title>
    <link>https://hugotkk.github.io/posts/</link>
    <description>Recent content in Posts on Hugo</description>
    <image>
      <url>https://hugotkk.github.io/papermod-cover.png</url>
      <link>https://hugotkk.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 06 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://hugotkk.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Certified DevOps Engineer - Professional</title>
      <link>https://hugotkk.github.io/posts/devops/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/devops/</guid>
      <description>DevOps choices Deployment  faster boot time - opsworks slower; ami faster using chef - opsworks need to update config when new node online - opsworks Configure lifecycle event less administrative overhead: eb &amp;gt; cloudformation when both solutions works auto healing: opsworks, codedeploy, eb (bcoz of the asg) rolling: eb, opsworks (not ideal, it is manual deploy), cloudformation+asg+AutoScalingRollingUpdate policy, codedeploy rolling = drop traffic to n instance &amp;gt; deploy &amp;gt; allow traffic in-place = deploy the deploy to all instances (parallel) blue/green deployment: eb (cname swap), codedeploy, 2x(cfn+asg+elb)+route53 or 2(cfn+asg)+elb(weighted target groups) blue/green deployment and want to delay the old asg termination: codedeploy canary deployment: codedeploy only on lambda / ecs, eb (traffic splitting), api gateway eb&amp;rsquo;s immutable deployment: create 2nd asg.</description>
    </item>
    
    <item>
      <title>Aurora</title>
      <link>https://hugotkk.github.io/posts/aurora/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aurora/</guid>
      <description>RDS Read Replica  cross AZ: OK cross region: OK promote / point-in-time recovery / restore from snapshot will create a new db instance which is not in my expectation. When DR, user need to update dns / db endpoint in application  Aurora Pros over non-aurora rds  read replica auto scaling failover (failover master to read replica in same region) multi-az by default endpoint for writer and reader instance (also custom endpoint)  Cons in aurora Bad integration in cross-region read replica For example:</description>
    </item>
    
    <item>
      <title>AWS Config</title>
      <link>https://hugotkk.github.io/posts/config/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/config/</guid>
      <description>config aggregator aggreagate all account under organization   enable service role in organization
  set up iam with
 viewing the organization    service role give config.amazonaws.com access for the config resource
  additional iam right to view accounts in organization
  from management account or delegated admin to use this option
aggreagate specfic account  authorization  cfn stackset add stack to stackset = deploy stack delete stack from stackset = delete the stack</description>
    </item>
    
    <item>
      <title>AWS Elastic Beanstalk</title>
      <link>https://hugotkk.github.io/posts/eb/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/eb/</guid>
      <description>eb eb init eb use web_dev eb list deploy code in repo
eb deploy web_dev edit config
eb config web_dev save config
eb config save apply save config
eb config put .elasticbeanstalk/saved_configs/Web-env-sc.cfg.yml Folder Structure
▾ .ebextensions/ app.config ▾ .elasticbeanstalk/ ▸ saved_configs/ config.yml ▸ .git/ .gitignore index.php README swap name, configuration with not swap</description>
    </item>
    
    <item>
      <title>AWS Organization</title>
      <link>https://hugotkk.github.io/posts/aws-organization/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-organization/</guid>
      <description>aws org  o = organization = it9 r = root = root ou = organization unit = dev / prod / uat / management / network  ou path: o-3ywbznlomt/r-t9g3/ou-t9g3-knls7nau/</description>
    </item>
    
    <item>
      <title>Opsworks</title>
      <link>https://hugotkk.github.io/posts/opsworks/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/opsworks/</guid>
      <description>OpsWorks  stack = cookbooks layer = frontend, backend, api, rds (how to config to instance) app = source code. can deploy and redeploy  Stack  I am exploring this cookbook from aws The nodejs demo cookbook repo does not include its dependencies In the opsworks demo, it uses opsworks-linux-demo-cookbooks-nodejs.tar.gz as the cookbook source We need to convert the repo to the archive before using it Aftering changing the cookbook source, we need to fetch the cache by running commands on instances  Inside the opsworks-linux-demo-cookbooks-nodejs.</description>
    </item>
    
    <item>
      <title>Blockchain Introduction</title>
      <link>https://hugotkk.github.io/posts/blockchain-introduction/</link>
      <pubDate>Sat, 22 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/blockchain-introduction/</guid>
      <description>Resources  Hyperledger Fabric Solidity  Notes what is blockchain  The blockchain solution in IoT / Supply chain are changing &amp;ldquo;Mesh&amp;rdquo; network to a &amp;ldquo;Star Network each parties access and write to the &amp;ldquo;blockchain network&amp;rdquo;. not more api integration between parties  How to use it How it work  use cryptography methods to ensure the integrity of a public writable database proof of work, proof of stake, proff  How to implement  solidity node.</description>
    </item>
    
    <item>
      <title>Booklists</title>
      <link>https://hugotkk.github.io/posts/booklist/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/booklist/</guid>
      <description> 語理分析的思考方法 - 李天命 Salt Sugar Fat: How the Food Giants Hooked Us Sapiens: A Brief History of Humankind (人類大歷史)  機器學習書單 SRE Book 列夫·托爾斯泰作品集  </description>
    </item>
    
    <item>
      <title>Multiple profile in firefox</title>
      <link>https://hugotkk.github.io/posts/multi-profiles-in-firefox/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/multi-profiles-in-firefox/</guid>
      <description>go to about:profile create a new profile  Profile Manager - Create, remove or switch Firefox profiles</description>
    </item>
    
    <item>
      <title>Aws Ground Station</title>
      <link>https://hugotkk.github.io/posts/aws-ground-station/</link>
      <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-ground-station/</guid>
      <description>https://www.youtube.com/watch?v=_MwNgO0aJo0
https://www.youtube.com/watch?v=namlZpQ6W_k</description>
    </item>
    
    <item>
      <title>BTRFS</title>
      <link>https://hugotkk.github.io/posts/btrfs/</link>
      <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/btrfs/</guid>
      <description>https://www.youtube.com/watch?v=iwNg_fusT9A
 Copy on Write - copy will not perform immediately only when write operation is happend Snapshot - use the tech of copy on write to save some space. size few bytes to same size as original data  </description>
    </item>
    
    <item>
      <title>istio</title>
      <link>https://hugotkk.github.io/posts/istio/</link>
      <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/istio/</guid>
      <description>Playlist
Deployment Strategies Best Practise
Canary https://octopus.com/docs/deployments/patterns/canary-deployments
 we have a load balancer &amp;amp; n server. deploy the changes on one of the server  Blue / Green https://www.ibm.com/docs/en/urbancode-deploy/6.2.7?topic=processes-modeling-blue-green-rolling-canary-deployments
Rolling </description>
    </item>
    
    <item>
      <title>Random number</title>
      <link>https://hugotkk.github.io/posts/random-numbers/</link>
      <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/random-numbers/</guid>
      <description>In this post, he wrote a web app to randomly generate the result with QRNG@ANU api.
It can generate Quantum random numbers. so interesting&amp;hellip;</description>
    </item>
    
    <item>
      <title>Coretek&#39;s cloud migration methodology</title>
      <link>https://hugotkk.github.io/posts/azure-migration-stragegies/</link>
      <pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/azure-migration-stragegies/</guid>
      <description>https://www.youtube.com/watch?v=tj3F0tX8eyc
6:26 - 5 steps
Assess Cloud Economic Assessment (8:20) understand resources needed on-premise (mem, storage, bandwidth)
Plan  use cloud adoption framework (10:45)  Migrate Cloud Migration Strategies (4:30)   Rehost - create vm on cloud and move application to it
  Refactor - Containerize
  Rearchitech &amp;amp; rebuild - Microservice
  5-week migration process (17:00)  Week T-3 plan Week T-2 build Week T-1 test Week T-0 go migration and cleanup Week T+1 transition  Use azure migrate (17:59) Setup migration Centre of Excellence (CoE) (20:18) Goven &amp;amp; Manage Monitor/ automation Five discipline of cloud governance (21:51) principles on how to manage / goven</description>
    </item>
    
    <item>
      <title>Spark</title>
      <link>https://hugotkk.github.io/posts/spark/</link>
      <pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/spark/</guid>
      <description>Playlist
Apache Spark on EKS https://github.com/kubernetes/kubernetes/tree/release-1.3/examples/spark</description>
    </item>
    
    <item>
      <title>Review of Rancher</title>
      <link>https://hugotkk.github.io/posts/rancher/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/rancher/</guid>
      <description>https://www.youtube.com/watch?v=LK6KbAlQRIg
 provide a GUI interface manage k8s clusters  Cons (21:12)  Still using docker (should use cri-o) Only support old version k8s (1.18) Mutable approach (not using image to provision, it installs docker and setup the cluster for you) Very slow to create the cluster  Pros  Manage multiple clusters GUI  </description>
    </item>
    
    <item>
      <title>A Roadmap to Cloud Centre of Excellence Adoption</title>
      <link>https://hugotkk.github.io/posts/cloud-center-of-excellenace/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/cloud-center-of-excellenace/</guid>
      <description>https://www.youtube.com/watch?v=mUTGdSA60Ao
 introduction - Cloud Centre of Excellence is a team that can help the organisation for cloud adoption role &amp;amp; responsible characteristic for the team member best practice  Characteristic  driving the organisation forward has ability to stand up - open-minded be confident why and how to do it - clear minded / big picture thinkers diverse and cross-functional  Skill Set  Cost management Project Management (Transparent) Cloud operation engineer (CI/CD) Data engineer (new currency, capture data from IoT, video stream) Application Security (IAM, Policy, Firewall)  Best Practise  Keep passion &amp;amp; excitement Start small (5-7 ppl in a team) Rotate people (training) Communication Scaling and reorganising Think of the failover and backup plan Cloud training for organisation Bill, cost optimization Empower the team (courage them trying new role, new service, bleeding-edge tech) Gain transparency (everyone knows the progress&amp;hellip;why you do that&amp;hellip;)  Notes  cloud makes anything as code -&amp;gt; code makes things more transparent -&amp;gt; the complexity of the project is reduced many jobs can be automated through cloud and they are automatically documented as code is it possible to create a roadmap / resources library for the whole organisation (like AWS workshop)?</description>
    </item>
    
    <item>
      <title>EC2 Bandwidth test</title>
      <link>https://hugotkk.github.io/posts/bandwidth-test/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/bandwidth-test/</guid>
      <description>Objective  Test if the ec2 can reach 10Gbps bandwidth in same placement group Test if the 10Gbps is the limited by the ec2 instance type or aws  AWS Limit https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html
in single-flow traffic,
 placement group: 10Gbps w/o placement group: 5Gbps  flow = worker (thread) in the network driver. depends on the ec2 instance type.
EC2 Instance Type Limit https://aws.amazon.com/ec2/instance-types/m5/
m5.8xlarge can reach 10Gbps
Setup Created 3 m5.</description>
    </item>
    
    <item>
      <title>Obsidian</title>
      <link>https://hugotkk.github.io/posts/obsidian/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/obsidian/</guid>
      <description>I found this markdown software when watching this video
I am interested in that map and think if I can organise my markdown notes with it.
Tutorials How To Use VIM Bindings in Obsidian | Beginners Guide https://www.youtube.com/watch?v=yX_Qdr9-7k
I Tried Obsidian Note Taking for a Week&amp;hellip; (MD App Review, Tips, Features, Guide, and Setup) https://www.youtube.com/watch?v=TDhTpPIjsDg
 most of the features do not attract to me Will prefer organising the notes with tags not folder Spacemacs is better for editing.</description>
    </item>
    
    <item>
      <title>Bluetooth</title>
      <link>https://hugotkk.github.io/posts/bluetooth/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/bluetooth/</guid>
      <description>https://www.youtube.com/watch?v=1I1vxu5qIUM
Transmit an electromagnetic wave (binary) with different wavelength
eg: 121mm = 1 124mm = 0
the waves send in all directions
Bluetooth range: 2.4835GHz - 2.4GHz
Divided in different sections (79 channels), each section has a pair of wavelengths representing 0 and 1
the bluetooth range is shared with some other device like a microwave oven
like the power of a microwave oven is too large for bluetooth.
it may destroy the bluetooth device if you put them inside the microwave oven (danger)</description>
    </item>
    
    <item>
      <title>OpenZeppelin</title>
      <link>https://hugotkk.github.io/posts/openzeppelin/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/openzeppelin/</guid>
      <description>Upgradable contract https://www.youtube.com/watch?v=kWUDTZhxKZI&amp;amp;list=WL&amp;amp;index=19
proxy pattern user interact with the proxy contract
the proxy will point to another smart contract
When upgrading the contract, the admin of the proxy contract points the proxy to another smart contract storage
Implementation  Transparent UUPS  </description>
    </item>
    
    <item>
      <title>Study Tips</title>
      <link>https://hugotkk.github.io/posts/idea-about-study/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/idea-about-study/</guid>
      <description>Zero to Full-Time Programmer in 5 Steps Zero to Full-Time Programmer in 5 Steps
 start from small consistently study every day  The scoreboard that is changing my life The scoreboard that is changing my life
  use scoreboard to track your goal
  goal vs actual
  Weekly review (like a logbook)
  lagging metric (review past performance)
  leading metric (measure future performance)</description>
    </item>
    
    <item>
      <title>Atomic cross chain swap between Hyperledger Fabric and Ethereum</title>
      <link>https://hugotkk.github.io/posts/cross-chain-swap/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/cross-chain-swap/</guid>
      <description>https://www.youtube.com/watch?v=j_j2MiAxUvY&amp;amp;list=PL0MZ85B_96CEmmy0C6NF52ZCMNcY1Wryf
Methods Wait until the transaction is completely settled not practical and safe
Hashlock The transaction is partially complete
Settle once the sender publishes the key on the blockchain.
Cons  hugo cannot refund if kevin does not response  Timelock  hugo made a partial transaction that the btc can be claimed by kevin within n number of blocks if the transaction is expired, hugo can claim back the fund  Cons  the claims need to execute manually  HTLC (Hash Time Lock Contract) Combine two locks: (and)</description>
    </item>
    
    <item>
      <title>Hyperledger composer</title>
      <link>https://hugotkk.github.io/posts/hyperledger-composer/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/hyperledger-composer/</guid>
      <description>Building BLOCKCHAIN Apps With HYPERLEDGER COMPOSER https://www.youtube.com/watch?v=gAxK6zYrfxI
a framework of hyperledger
 testing - mocha / chai webapp generator - Yeoman api generation - Rest Server + loopback api doc generation - swagger auth (rest api) - passport integration with IOT - red-node  </description>
    </item>
    
    <item>
      <title>Node Red</title>
      <link>https://hugotkk.github.io/posts/node-red/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/node-red/</guid>
      <description>Official Website
Playlist
a visual editor to build workflow and ui application to interact with IoT
 wire the IoTs and user (with web dashboard) read data from IoT write data to IoT (control it, on and off etc) build a flow among IoTs and users for automation build dashboard UI  all can be done by drag and drop
can be used with blockchain in the supply chain&amp;hellip;
node red pulls the data from sensors and submits to blockchain automatically</description>
    </item>
    
    <item>
      <title>AWS EKS Workshop</title>
      <link>https://hugotkk.github.io/posts/aws-workshop/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-workshop/</guid>
      <description>Day1 Setup  https://www.eksworkshop.com/020_prerequisites/ec2instance https://www.eksworkshop.com/030_eksctl/launcheks https://www.eksworkshop.com/beginner/060_helm/helm_intro/install  Tasks  Deploy simple application Fargate  Notes There are 2 modes in EKS:
 EC2 Fargate  They can coexist in EKS.
Also we can only fargate only. When we deploy plugins to the cluster, It will be deployed to the control panel. (hidden from user)
How to use fargate in EKS:  create a fargate profile which is associated with a namespace deploy yml to that namespace  Pros and Con of fargate can be scaled up quickly  it is a micro vm as similar as pod one fargate instance per pod  lower cost of fargate  Fargate will be cheaper in some situations.</description>
    </item>
    
    <item>
      <title>AWS Managed Blockchain</title>
      <link>https://hugotkk.github.io/posts/aws-managed-blockchain/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-managed-blockchain/</guid>
      <description>Pros with AWS Managed Blockchain  no need to build the ledger by themself focus on the smart contract a single blockchain network can effectively work cross multiple parties  An Overview on Blockchain Services from AWS https://www.youtube.com/watch?v=WAIOBeQA2QQ
 ledger database (immutable transaction) consenus decentlization smart contract ease for audit  Hyperledger Fabric VS eth  authentication access control private ledger  </description>
    </item>
    
    <item>
      <title>EKS vs AKS</title>
      <link>https://hugotkk.github.io/posts/eks-vs-aks/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/eks-vs-aks/</guid>
      <description>Control Panel Fee  AKS: 0 EKS: fixed charge 0.1 USD / Hour  Integration I think AKS is better, most of the provisioning plugins can be enabled by one click
In aws, you need to
 install plugins setup iam service account for the plugins to access AWS service  application routing For AKS,
 it is just an checkbox option  For EKS, you need to
 setup IAM OICD setup external dns setup ALB contrller  auto scaler Same as application routing -&amp;gt; auto scaler.</description>
    </item>
    
    <item>
      <title>Hyperledger fabric</title>
      <link>https://hugotkk.github.io/posts/hyperledger-fabric/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/hyperledger-fabric/</guid>
      <description>Installation https://hyperledger-fabric.readthedocs.io/en/release-2.2/install.html node go docker fabric fabric-ca third party image: kafka, zookeeper, couchdb fabric-ca-binary</description>
    </item>
    
    <item>
      <title>Movies about Hong Kong</title>
      <link>https://hugotkk.github.io/posts/movies-about-hk/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/movies-about-hk/</guid>
      <description>https://youtu.be/TgsTCzLRQcs?t=1905
May You Stay Forever Young Taipei golden horse film festival 2021
Trailer
 two girls arrested in 721 one sexuel abused by HK police force and try to commit suicide another young teanager insists on looking for her. She is arrested as she turns back to him in a confrontation with riot police  Revolution of Our Times IMDB
Trailer
Connection with mashipo How an elderly Hong Kong pro-democracy protester also fought in vain to save his village from developers</description>
    </item>
    
    <item>
      <title>AWS Certified Advanced Networking - Specialty</title>
      <link>https://hugotkk.github.io/posts/aws-certified-advanced-network/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-certified-advanced-network/</guid>
      <description>Resources  Exam Landing Page Sample Questions Exam Guide udemy course udemy mock exam whizlabs test &amp;amp; hand-on labs  TODO  take notes revision whizlabs mocks (by topic) mock 1 (udemy) mock 2,3,4 (whizlabs) examtopic udemy quiz + exercise  Revision The numbers below are the page no of the udemy course&amp;rsquo;s pdf: AWS Certified Networking Specialty Slides v1.1.
Summary  DNS (151) Advanced Networking (188) VPC Endpoint (292, 298) Site-to-site VPN (347, 401, 407) VPN Tunnels and Routing (348, 352) DX Gateway with VGW (532) DX with TGW (547) DX Billing (624) DX (630) Troubleshooting in DX (626) Gateway Load Balancer (816)  Q &amp;amp; A  ALB (677) DX (625)  Good to know  SG (46) BYOIP (90) VPC Traffic Mirroring (105) DHCP Option Sets (124) TGW (251) AWS Site-to-Site VPN (403) Network Load Balancer (656)  Comparisons  private, public and EIP (33) IPv4, IPv6 (36) NACL, SG (48) NAT Gateway, Instance (64) VPC Peering vs Transit Gateway Cloudfront function vs lambda@edge (703) AWS global accelerator vs Cloudfront (711)  Exam Essential  VPC Fundamentals (67) Advanced VPC (190) VPC Peering Endpoint (301) AWs Site-to-Site VPN (402) Direct Connect (632) Firewall (806) Gateway Load Balancer (817)  Revision by topic Playlists  global accelerator api gateway client vpn cloudformation cloudfront cloudwatch cloudhsm cognito config dx edge computing elb firehose guarduty inspector lambda organization route53 s3 sqs ssm vpc vpn waf workspace  References  accelerator - custom routing accelerator - custom routing alb - limit request to clondfront only aurora - regional failover aws organization - SCP cloudfront - origin types cloudfront - signed url vs signed cookies cloudfront - troubleshooting cloudfront - will forward the response when first byte arrives from the origin cloudhsm - auto ha cloudtrail - 5 trails for region cloudtrail - log encryption with KMS cloudtrail - use integrity validation to check the log was modified, delete or change cloudwatch - namespace valid characters cloudwatch - no need to config sns to provide data every minute cloudwatch - skip metrics config - managed rules config - renaming the delivery channel config - requirements config - type of triggers config - viewing configuration compliance costs model costs model 2 dhcp - cannot modify and one vpc one dhcp options dx - dx in public regions can access any other public region dx - faq dx - lag requirement 1 dx - lag requirement 2 dx - public vif dx - public vif connectivity dx - quotas dx - requirements for virtual interfaces dx - vif dx - virtual Interfaces to Direct Connect connections or LAG bundles dx - vpn as backup ec2 - http proxy ec2 - network performance ec2 - retrieve instance metadata eip - hostname will be changed once eip attached eip - public ip change every time stop and start the instance eip - public ip will be released once eip attached eip - reverse dns record for mailserver eni - limitation flow log local zone - alb limitation local zone - supported service ms ad - limitation - not compatible with exchange and skype ms ad - requirements nacl - default rule# in nacl nat - need egress-only-internet-gateway for ipv6 to ipv6 commnuication nat - only support tcp udp and icmp nat - pricing nat - tcp connectin fail as tcp does not support ip fragmentation placement group - can add / move / remove instance from group placement group - can launch with diff instance type but not recommended placement group - can span vpcs placement group - cannot merge placement group placement group - stop and start is fine but may have insufficient capacity error without capacity reservation quicksight - private connection with rds redishift - private connectivity with enhanced vpc routing route53 - a/p failover route53 - aws services which support alias records route53 - can attach private hosted zone with overlapping namespace in same vpc route53 - dns resolution b/w on-premise and aws with ad route53 - dns server with custom domain (white-labe and reusable delegation set) route53 - health check rules route53 - system rules when forwarding less specific domain simple ad - requirement sns tgw - peering tgw - quotas tgw - route table priority vpc - aws cidr tier vpc - aws does not support broadcast in vpc vpc - ipv4 subnet cidr prefix vpc - ipv6 subnet cidr prefix vpc - jumbo frame packet drop as Don&#39;t Fragment flag is set but the network does not support higher MTU vpc - multicast support vpc - reserved address in cidr vpc - route table qutoa vpc - route table troubleshoot vpc - usage of enableDnsHostnames and enableDnsSupport vpce - service endpoint support ipv4 over tcp only vpce - tagging is suported vpce - use prefix list in security group vpn - ipv6 support on tgw but not vgw vpn - static route a/p mode (priority) vpn - troubleshooting vpn - why cannot overlap the cidr vpn -ipsec encryption algorithms waf - config count action to test (monitor mode) waf - rule statement list workspaces - requirements appliance in shared vpc cloudhub mult vpc with single customer gateway multi-vpc network infrastructure route table options shared vpc transit vpc Virtual Private Cloud Connectivity Options vpc peering with cidr overlap vpc with subnet overlapping  VPC Fundamentals (17) What is TCP/IP?</description>
    </item>
    
    <item>
      <title>Blockchain use cases</title>
      <link>https://hugotkk.github.io/posts/blockchain-use-case/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/blockchain-use-case/</guid>
      <description>Trust Over IP: Hyperledger Ursa, Indy, and Aires https://www.youtube.com/watch?v=FfuhlF9ZYPM
Notes  prove the credential without CA trusted issuer (eg: gov) issues the identity token (eg: driving licence) -&amp;gt; send it to a crypto account (like sending btc to someone) on the blockchain, it shows a record that the account owns that licence. (like you can check your btc balance / NFS on chain explorer) anyone can request that you own that account (like an approval transaction from dapp).</description>
    </item>
    
    <item>
      <title>k8s Authentication</title>
      <link>https://hugotkk.github.io/posts/k8s-authentication/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/k8s-authentication/</guid>
      <description>with IAM  user -&amp;gt; with API_KEY &amp;amp; API_TOKEN audience attached iam role (eg: ec2 instance) update the iam role and user mapping in configmap aws-auth  OIDC OIDC built in at the eks cluster
 OICD can request AWS IAM to issue the web identity token the token will be used to assume role and access AWS service     Item Value     OICD oidc.</description>
    </item>
    
    <item>
      <title>Note for CKA Exam</title>
      <link>https://hugotkk.github.io/posts/note-for-cka-exam/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/note-for-cka-exam/</guid>
      <description>Things to turn off before exam Bandwidth saving  google drive sync any backgorund updates wifi connection in other devices  Prevent from autoupdate  software update (mbp, iphone)  Others  firewall disable all chrome plugins  backup plan  sim card - two extra network: EE, giffgaff spare computer (MBP)  Tips When use wc -&amp;gt; be careful the header, need total - 1 Store temporary commands / note / result in a fixed location like /root/tmp Even in remote host; we use that fixed location to store our results then get back the result from it remote$ cat tmp remote$ exit remote$ exit local$ ssh remote cat tmp Do not use tmux hard to copy and paste and scroll</description>
    </item>
    
    <item>
      <title>Recover etcd</title>
      <link>https://hugotkk.github.io/posts/etcd/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/etcd/</guid>
      <description>Control Panel     svr1   svr2   svr3    svr1 Stop k8s systemctl stop kubelet crictl rm -f $(crictl ps -q) start the etcd in single node vim /etc/kubernetes/manifests/etcd.yaml - --force-new-cluster=true Add svr2 etcd to cluster kubectl exec -it etcd-svr1.hhuge9.com -nkube-system -- sh -c &amp;#39;ETCDCTL_API=3 etcdctl --endpoints 127.0.0.1:2379 --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --cacert=/etc/kubernetes/pki/etcd/ca.crt member add svr2.hhuge9.com --peer-urls=&amp;#34;https://192.168.0.102:2380&amp;#34;&amp;#39; Save the output export ETCD_NAME=&amp;#34;svr2.hhuge9.com&amp;#34; export ETCD_INITIAL_CLUSTER=&amp;#34;svr1.</description>
    </item>
    
    <item>
      <title>How to create ssl cert for tls auth</title>
      <link>https://hugotkk.github.io/posts/openssl/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/openssl/</guid>
      <description>Procedures  create private key create csr (distinguished_name) sign csr by CA (x509v3)  Commands Gen private key openssl genrsa \ -out ca.key Self signed crt openssl req -x509 \ -config openssl.cnf -new \ -out ca.crt \ -key ca.key gen csr openssl req \ -config openssl.cnf -new \ -out server.csr \ -key server.key sign crt openssl x509 \ -extfile openssl.cnf \ -extensions svr_cert \ -in server.csr \ -out server.crt \ -CA ca.</description>
    </item>
    
    <item>
      <title>Disable Ctrl&#43;w on Chrome</title>
      <link>https://hugotkk.github.io/posts/disable-ctrl-w-on-chrome/</link>
      <pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/disable-ctrl-w-on-chrome/</guid>
      <description>I am preparing the CKA exam. The exam requires us to complete tasks using web terminal on Chrome.
My concern is that Ctrl+w is a common shortcut in terminal (delete word) but it also is the &amp;ldquo;close tab&amp;rdquo; shortcut of chrome. (Windows)
There is a workaround on this issue. Comment under this article mentioned that we can define ctrl+w in chrome://extensions/shortcuts to override the default behavior on ctrl+w. This will prevent the tab be closed when hit ctrl+w accidently.</description>
    </item>
    
    <item>
      <title>Time Format</title>
      <link>https://hugotkk.github.io/posts/time-format/</link>
      <pubDate>Fri, 17 Sep 2021 15:39:47 +0100</pubDate>
      
      <guid>https://hugotkk.github.io/posts/time-format/</guid>
      <description>https://www.w3.org/TR/NOTE-datetime
2019-07-16T12:00:00Z = utc time
YYYY-MM-DDThh:mm:ss.sTZD
TZD can be Z or +hh:mm or -hh:mm
Z = UTC
+08:00 = UTC+8</description>
    </item>
    
    <item>
      <title>Broken Git Ref</title>
      <link>https://hugotkk.github.io/posts/broken-git-ref/</link>
      <pubDate>Wed, 25 Aug 2021 11:57:02 +0100</pubDate>
      
      <guid>https://hugotkk.github.io/posts/broken-git-ref/</guid>
      <description>Facing this warning in a repo
warning: ignoring broken ref refs/remotes/origin/HEAD https://stackoverflow.com/questions/45811971/warning-ignoring-broken-ref-refs-remotes-origin-head
After reading this article, seem the reference of refs/remotes/origin/HEAD is broken.
$ git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/master I have changed the branch from master to main before. master branch is no longer exist. I think that is the reason of the warning.
git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main Then the warning is fixed.</description>
    </item>
    
    <item>
      <title>Slow Bash Startup</title>
      <link>https://hugotkk.github.io/posts/slow-bash-startup/</link>
      <pubDate>Wed, 25 Aug 2021 11:50:07 +0100</pubDate>
      
      <guid>https://hugotkk.github.io/posts/slow-bash-startup/</guid>
      <description>Recently find that it is too slow to start a new bash.
After debugging, I realize that nvm is the main reason for that.
Finally, disabled nvm to solve the problem.</description>
    </item>
    
    <item>
      <title>Move Forward Backward in Chrome</title>
      <link>https://hugotkk.github.io/posts/move-forward-backward-in-chrome/</link>
      <pubDate>Fri, 20 Aug 2021 10:18:29 +0100</pubDate>
      
      <guid>https://hugotkk.github.io/posts/move-forward-backward-in-chrome/</guid>
      <description>I used the emacs keybind to maniplicate the string on command line but it does not work at chrome on macos.
I am unhappy with that until I find the solution on this post
 https://stackoverflow.com/questions/20146972/is-there-a-way-to-make-alt-f-and-alt-b-jump-word-forward-and-backward-instead-of  sudo mkdir -p ~/Library/Keybindings/ sudo vi ~/Library/Keybindings/DefaultKeyBinding.dict { &amp;#34;~d&amp;#34; = &amp;#34;deleteWordForward:&amp;#34;; &amp;#34;^w&amp;#34; = &amp;#34;deleteWordBackward:&amp;#34;; &amp;#34;~f&amp;#34; = &amp;#34;moveWordForward:&amp;#34;; &amp;#34;~b&amp;#34; = &amp;#34;moveWordBackward:&amp;#34;; } </description>
    </item>
    
  </channel>
</rss>
