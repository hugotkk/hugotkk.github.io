<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Hugo</title>
    <link>https://hugotkk.github.io/posts/</link>
    <description>Recent content in Posts on Hugo</description>
    <image>
      <url>https://hugotkk.github.io/papermod-cover.png</url>
      <link>https://hugotkk.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 10 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hugotkk.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EC2 Bandwidth test</title>
      <link>https://hugotkk.github.io/posts/bandwidth-test/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/bandwidth-test/</guid>
      <description>Objective  Test if the ec2 can reach 10Gbps bandwidth in same placement group Test if the 10Gbps is the limited by the ec2 instance type or aws  AWS Limit https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html
in single-flow traffic,
 placement group: 10Gbps w/o placement group: 5Gbps  flow = worker (thread) in the network driver. depends on the ec2 instance type.
EC2 Instance Type Limit https://aws.amazon.com/ec2/instance-types/m5/
m5.8xlarge can reach 10Gbps
Setup Created 3 m5.</description>
    </item>
    
    <item>
      <title>Obsidian</title>
      <link>https://hugotkk.github.io/posts/obsidian/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/obsidian/</guid>
      <description>I found this markdown software when watching this video
I am interested in that map and think if I can organise my markdown notes with it.
Tutorials How To Use VIM Bindings in Obsidian | Beginners Guide https://www.youtube.com/watch?v=yX_Qdr9-7k
I Tried Obsidian Note Taking for a Week&amp;hellip; (MD App Review, Tips, Features, Guide, and Setup) https://www.youtube.com/watch?v=TDhTpPIjsDg
 most of the features do not attract to me Will prefer organising the notes with tags not folder Spacemacs is better for editing.</description>
    </item>
    
    <item>
      <title>Bluetooth</title>
      <link>https://hugotkk.github.io/posts/bluetooth/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/bluetooth/</guid>
      <description>https://www.youtube.com/watch?v=1I1vxu5qIUM
Transmit an electromagnetic wave (binary) with different wavelength
eg: 121mm = 1 124mm = 0
the waves send in all directions
Bluetooth range: 2.4835GHz - 2.4GHz
Divided in different sections (79 channels), each section has a pair of wavelengths representing 0 and 1
the bluetooth range is shared with some other device like a microwave oven
like the power of a microwave oven is too large for bluetooth.
it may destroy the bluetooth device if you put them inside the microwave oven (danger)</description>
    </item>
    
    <item>
      <title>OpenZeppelin</title>
      <link>https://hugotkk.github.io/posts/openzeppelin/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/openzeppelin/</guid>
      <description>Upgradable contract https://www.youtube.com/watch?v=kWUDTZhxKZI&amp;amp;list=WL&amp;amp;index=19
proxy pattern user interact with the proxy contract
the proxy will point to another smart contract
When upgrading the contract, the admin of the proxy contract points the proxy to another smart contract storage
Implementation  Transparent UUPS  </description>
    </item>
    
    <item>
      <title>Study Tips</title>
      <link>https://hugotkk.github.io/posts/idea-about-study/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/idea-about-study/</guid>
      <description>Zero to Full-Time Programmer in 5 Steps Zero to Full-Time Programmer in 5 Steps
 start from small consistently study every day  The scoreboard that is changing my life The scoreboard that is changing my life
  use scoreboard to track your goal
  goal vs actual
  Weekly review (like a logbook)
  lagging metric (review past performance)
  leading metric (measure future performance)</description>
    </item>
    
    <item>
      <title>Atomic cross chain swap between Hyperledger Fabric and Ethereum</title>
      <link>https://hugotkk.github.io/posts/cross-chain-swap/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/cross-chain-swap/</guid>
      <description>https://www.youtube.com/watch?v=j_j2MiAxUvY&amp;amp;list=PL0MZ85B_96CEmmy0C6NF52ZCMNcY1Wryf
Methods Wait until the transaction is completely settled not practical and safe
Hashlock The transaction is partially complete
Settle once the sender publishes the key on the blockchain.
Cons  hugo cannot refund if kevin does not response  Timelock  hugo made a partial transaction that the btc can be claimed by kevin within n number of blocks if the transaction is expired, hugo can claim back the fund  Cons  the claims need to execute manually  HTLC (Hash Time Lock Contract) Combine two locks: (and)</description>
    </item>
    
    <item>
      <title>Hyperledger composer</title>
      <link>https://hugotkk.github.io/posts/hyperledger-composer/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/hyperledger-composer/</guid>
      <description>Building BLOCKCHAIN Apps With HYPERLEDGER COMPOSER https://www.youtube.com/watch?v=gAxK6zYrfxI
a framework of hyperledger
 testing - mocha / chai webapp generator - Yeoman api generation - Rest Server + loopback api doc generation - swagger auth (rest api) - passport integration with IOT - red-node  </description>
    </item>
    
    <item>
      <title>Node Red</title>
      <link>https://hugotkk.github.io/posts/node-red/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/node-red/</guid>
      <description>Official Website
Playlist
a visual editor to build workflow and ui application to interact with IoT
 wire the IoTs and user (with web dashboard) read data from IoT write data to IoT (control it, on and off etc) build a flow among IoTs and users for automation build dashboard UI  all can be done by drag and drop
can be used with blockchain in the supply chain&amp;hellip;
node red pulls the data from sensors and submits to blockchain automatically</description>
    </item>
    
    <item>
      <title>AWS EKS Workshop</title>
      <link>https://hugotkk.github.io/posts/aws-workshop/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-workshop/</guid>
      <description>Day1 Setup  https://www.eksworkshop.com/020_prerequisites/ec2instance https://www.eksworkshop.com/030_eksctl/launcheks https://www.eksworkshop.com/beginner/060_helm/helm_intro/install  Tasks  Deploy simple application Fargate  Notes There are 2 modes in EKS:
 EC2 Fargate  They can coexist in EKS.
Also we can only fargate only. When we deploy plugins to the cluster, It will be deployed to the control panel. (hidden from user)
How to use fargate in EKS:  create a fargate profile which is associated with a namespace deploy yml to that namespace  Pros and Con of fargate can be scaled up quickly  it is a micro vm as similar as pod one fargate instance per pod  lower cost of fargate  Fargate will be cheaper in some situations.</description>
    </item>
    
    <item>
      <title>AWS Managed Blockchain</title>
      <link>https://hugotkk.github.io/posts/aws-managed-blockchain/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-managed-blockchain/</guid>
      <description>Pros with AWS Managed Blockchain  no need to build the ledger by themself focus on the smart contract a single blockchain network can effectively work cross multiple parties  An Overview on Blockchain Services from AWS https://www.youtube.com/watch?v=WAIOBeQA2QQ
 ledger database (immutable transaction) consenus decentlization smart contract ease for audit  Hyperledger Fabric VS eth  authentication access control private ledger  </description>
    </item>
    
    <item>
      <title>EKS vs AKS</title>
      <link>https://hugotkk.github.io/posts/eks-vs-aks/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/eks-vs-aks/</guid>
      <description>Control Panel Fee  AKS: 0 EKS: fixed charge 0.1 USD / Hour  Integration I think AKS is better, most of the provisioning plugins can be enabled by one click
In aws, you need to
 install plugins setup iam service account for the plugins to access AWS service  application routing For AKS,
 it is just an checkbox option  For EKS, you need to
 setup IAM OICD setup external dns setup ALB contrller  auto scaler Same as application routing -&amp;gt; auto scaler.</description>
    </item>
    
    <item>
      <title>Hyperledger fabric</title>
      <link>https://hugotkk.github.io/posts/hyperledger-fabric/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/hyperledger-fabric/</guid>
      <description>Installation https://hyperledger-fabric.readthedocs.io/en/release-2.2/install.html node go docker fabric fabric-ca third party image: kafka, zookeeper, couchdb fabric-ca-binary</description>
    </item>
    
    <item>
      <title>Movies about Hong Kong</title>
      <link>https://hugotkk.github.io/posts/movies-about-hk/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/movies-about-hk/</guid>
      <description>https://youtu.be/TgsTCzLRQcs?t=1905
May You Stay Forever Young Taipei golden horse film festival 2021
Trailer
 two girls arrested in 721 one sexuel abused by HK police force and try to commit suicide another young teanager insists on looking for her. She is arrested as she turns back to him in a confrontation with riot police  Revolution of Our Times IMDB
Trailer
Connection with mashipo How an elderly Hong Kong pro-democracy protester also fought in vain to save his village from developers</description>
    </item>
    
    <item>
      <title>AWS Certified Advanced Networking - Specialty</title>
      <link>https://hugotkk.github.io/posts/aws-certified-advanced-network/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-certified-advanced-network/</guid>
      <description>Resources  AWS Certified Advanced Networking Specialty 2021  How to connect VPCs  Transit gateway peering attachments What is VPC peering? Transit Gateway vs VPC peering     Solution / Situation same region cross region cross account     VPC Peering OK OK OK   TGW Peering OK OK OK   TGW (attach VPC) OK NO OK   AWS Managed VPN OK OK OK   EC2 Based VPN OK OK OK    Private Link is something like tgw peer but for spefic service only.</description>
    </item>
    
    <item>
      <title>Blockchain use cases</title>
      <link>https://hugotkk.github.io/posts/blockchain-use-case/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/blockchain-use-case/</guid>
      <description>Trust Over IP: Hyperledger Ursa, Indy, and Aires https://www.youtube.com/watch?v=FfuhlF9ZYPM
Notes  prove the credential without CA trusted issuer (eg: gov) issues the identity token (eg: driving license) -&amp;gt; send it to a crypto account (like sending btc to someone) on the blockchain, it shows a record that the account owns that license. (like you can check your btc balance / NFS on chain explorer) anyone can request that you own that account (like an approval transaction from dapp).</description>
    </item>
    
    <item>
      <title>k8s Authentication</title>
      <link>https://hugotkk.github.io/posts/k8s-authentication/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/k8s-authentication/</guid>
      <description>with IAM  user -&amp;gt; with API_KEY &amp;amp; API_TOKEN audience attached iam role (eg: ec2 instance) update the iam role and user mapping in configmap aws-auth  OIDC OIDC built in at the eks cluster
 OICD can request AWS IAM to issue the web identity token the token will be used to assume role and access AWS service     Item Value     OICD oidc.</description>
    </item>
    
    <item>
      <title>Note for CKA Exam</title>
      <link>https://hugotkk.github.io/posts/note-for-cka-exam/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/note-for-cka-exam/</guid>
      <description>Things to turn off before exam Bandwidth saving  google drive sync any backgorund updates wifi connection in other devices  Prevent from autoupdate  software update (mbp, iphone)  Others  firewall disable all chrome plugins  backup plan  sim card - two extra network: EE, giffgaff spare computer (MBP)  Tips When use wc -&amp;gt; be careful the header, need total - 1 Store temporary commands / note / result in a fixed location like /root/tmp Even in remote host; we use that fixed location to store our results then get back the result from it remote$ cat tmp remote$ exit remote$ exit local$ ssh remote cat tmp Do not use tmux hard to copy and paste and scroll</description>
    </item>
    
    <item>
      <title>Recover etcd</title>
      <link>https://hugotkk.github.io/posts/etcd/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/etcd/</guid>
      <description>Control Panel     svr1   svr2   svr3    svr1 Stop k8s systemctl stop kubelet crictl rm -f $(crictl ps -q) start the etcd in single node vim /etc/kubernetes/manifests/etcd.yaml - --force-new-cluster=true Add svr2 etcd to cluster kubectl exec -it etcd-svr1.hhuge9.com -nkube-system -- sh -c &#39;ETCDCTL_API=3 etcdctl --endpoints 127.0.0.1:2379 --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key --cacert=/etc/kubernetes/pki/etcd/ca.crt member add svr2.hhuge9.com --peer-urls=&amp;quot;https://192.168.0.102:2380&amp;quot;&#39; Save the output export ETCD_NAME=&amp;quot;svr2.hhuge9.com&amp;quot; export ETCD_INITIAL_CLUSTER=&amp;quot;svr1.</description>
    </item>
    
    <item>
      <title>How to create ssl cert for tls auth</title>
      <link>https://hugotkk.github.io/posts/openssl/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/openssl/</guid>
      <description>Procedures  create private key create csr (distinguished_name) sign csr by CA (x509v3)  Commands Gen private key openssl genrsa \ -out ca.key Self signed crt openssl req -x509 \ -config openssl.cnf -new \ -out ca.crt \ -key ca.key gen csr openssl req \ -config openssl.cnf -new \ -out server.csr \ -key server.key sign crt openssl x509 \ -extfile openssl.cnf \ -extensions svr_cert \ -in server.csr \ -out server.crt \ -CA ca.</description>
    </item>
    
    <item>
      <title>Disable Ctrl&#43;w on Chrome</title>
      <link>https://hugotkk.github.io/posts/disable-ctrl-w-on-chrome/</link>
      <pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/disable-ctrl-w-on-chrome/</guid>
      <description>I am preparing the CKA exam. The exam requires us to complete tasks using web terminal on Chrome.
My concern is that Ctrl+w is a common shortcut in terminal (delete word) but it also is the &amp;ldquo;close tab&amp;rdquo; shortcut of chrome. (Windows)
There is a workaround on this issue. Comment under this article mentioned that we can define ctrl+w in chrome://extensions/shortcuts to override the default behavior on ctrl+w. This will prevent the tab be closed when hit ctrl+w accidently.</description>
    </item>
    
    <item>
      <title>Time Format</title>
      <link>https://hugotkk.github.io/posts/time-format/</link>
      <pubDate>Fri, 17 Sep 2021 15:39:47 +0100</pubDate>
      
      <guid>https://hugotkk.github.io/posts/time-format/</guid>
      <description>https://www.w3.org/TR/NOTE-datetime
2019-07-16T12:00:00Z = utc time
YYYY-MM-DDThh:mm:ss.sTZD
TZD can be Z or +hh:mm or -hh:mm
Z = UTC
+08:00 = UTC+8</description>
    </item>
    
    <item>
      <title>Broken Git Ref</title>
      <link>https://hugotkk.github.io/posts/broken-git-ref/</link>
      <pubDate>Wed, 25 Aug 2021 11:57:02 +0100</pubDate>
      
      <guid>https://hugotkk.github.io/posts/broken-git-ref/</guid>
      <description>Facing this warning in a repo
warning: ignoring broken ref refs/remotes/origin/HEAD https://stackoverflow.com/questions/45811971/warning-ignoring-broken-ref-refs-remotes-origin-head
After reading this article, seem the reference of refs/remotes/origin/HEAD is broken.
$ git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/master I have changed the branch from master to main before. master branch is no longer exist. I think that is the reason of the warning.
git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main Then the warning is fixed.</description>
    </item>
    
    <item>
      <title>Slow Bash Startup</title>
      <link>https://hugotkk.github.io/posts/slow-bash-startup/</link>
      <pubDate>Wed, 25 Aug 2021 11:50:07 +0100</pubDate>
      
      <guid>https://hugotkk.github.io/posts/slow-bash-startup/</guid>
      <description>Recently find that it is too slow to start a new bash.
After debugging, I realize that nvm is the main reason for that.
Finally, disabled nvm to solve the problem.</description>
    </item>
    
    <item>
      <title>Move Forward Backward in Chrome</title>
      <link>https://hugotkk.github.io/posts/move-forward-backward-in-chrome/</link>
      <pubDate>Fri, 20 Aug 2021 10:18:29 +0100</pubDate>
      
      <guid>https://hugotkk.github.io/posts/move-forward-backward-in-chrome/</guid>
      <description>I used the emacs keybind to maniplicate the string on command line but it does not work at chrome on macos.
I am unhappy with that until I find the solution on this post
 https://stackoverflow.com/questions/20146972/is-there-a-way-to-make-alt-f-and-alt-b-jump-word-forward-and-backward-instead-of  sudo mkdir -p ~/Library/Keybindings/ sudo vi ~/Library/Keybindings/DefaultKeyBinding.dict { &amp;quot;~d&amp;quot; = &amp;quot;deleteWordForward:&amp;quot;; &amp;quot;^w&amp;quot; = &amp;quot;deleteWordBackward:&amp;quot;; &amp;quot;~f&amp;quot; = &amp;quot;moveWordForward:&amp;quot;; &amp;quot;~b&amp;quot; = &amp;quot;moveWordBackward:&amp;quot;; } </description>
    </item>
    
  </channel>
</rss>
