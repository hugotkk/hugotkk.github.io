<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>aws on Hugo</title>
    <link>https://hugotkk.github.io/tags/aws/</link>
    <description>Recent content in aws on Hugo</description>
    <image>
      <url>https://hugotkk.github.io/papermod-cover.png</url>
      <link>https://hugotkk.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 06 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://hugotkk.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Certified DevOps Engineer - Professional</title>
      <link>https://hugotkk.github.io/posts/devops/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/devops/</guid>
      <description>DevOps choices Deployment  faster boot time - opsworks slower; ami faster using chef - opsworks need to update config when new node online - opsworks Configure lifecycle event less administrative overhead: eb &amp;gt; cloudformation when both solutions works auto healing: opsworks, codedeploy, eb (bcoz of the asg) rolling: eb, opsworks (not ideal, it is manual deploy), cloudformation+asg, codedeploy blue/green deployment: eb (cname swap), codedeploy blue/green deployment and want to delay the old asg termination: codedeploy canary deployment: codedeploy only on lambda / ecs, eb (traffic splitting) eb&amp;rsquo;s immutable deployment: create 2nd asg.</description>
    </item>
    
    <item>
      <title>Aurora</title>
      <link>https://hugotkk.github.io/posts/aurora/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aurora/</guid>
      <description>RDS Read Replica  cross AZ: OK cross region: OK promote / point-in-time recovery / restore from snapshot will create a new db instance which is not in my expectation. When DR, user need to update dns / db endpoint in application  Aurora Pros over non-aurora rds  read replica auto scaling failover (failover master to read replica in same region) multi-az by default endpoint for writer and reader instance (also custom endpoint)  Cons in aurora Bad integration in cross-region read replica For example:</description>
    </item>
    
    <item>
      <title>AWS Config</title>
      <link>https://hugotkk.github.io/posts/config/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/config/</guid>
      <description>config aggregator aggreagate all account under organization   enable service role in organization
  set up iam with
 viewing the organization    service role give config.amazonaws.com access for the config resource
  additional iam right to view accounts in organization
  from management account or delegated admin to use this option
aggreagate specfic account  authorization  cfn stackset add stack to stackset = deploy stack delete stack from stackset = delete the stack</description>
    </item>
    
    <item>
      <title>AWS Elastic Beanstalk</title>
      <link>https://hugotkk.github.io/posts/eb/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/eb/</guid>
      <description>eb eb init eb use web_dev eb list deploy code in repo
eb deploy web_dev edit config
eb config web_dev save config
eb config save apply save config
eb config put .elasticbeanstalk/saved_configs/Web-env-sc.cfg.yml Folder Structure
▾ .ebextensions/ app.config ▾ .elasticbeanstalk/ ▸ saved_configs/ config.yml ▸ .git/ .gitignore index.php README swap name, configuration with not swap</description>
    </item>
    
    <item>
      <title>AWS Organization</title>
      <link>https://hugotkk.github.io/posts/aws-organization/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-organization/</guid>
      <description>aws org  o = organization = it9 r = root = root ou = organization unit = dev / prod / uat / management / network  ou path: o-3ywbznlomt/r-t9g3/ou-t9g3-knls7nau/</description>
    </item>
    
    <item>
      <title>Opsworks</title>
      <link>https://hugotkk.github.io/posts/opsworks/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/opsworks/</guid>
      <description>OpsWorks  stack = cookbooks layer = frontend, backend, api, rds (how to config to instance) app = source code. can deploy and redeploy  Stack  I am exploring this cookbook from aws The nodejs demo cookbook repo does not include its dependencies In the opsworks demo, it uses opsworks-linux-demo-cookbooks-nodejs.tar.gz as the cookbook source We need to convert the repo to the archive before using it Aftering changing the cookbook source, we need to fetch the cache by running commands on instances  Inside the opsworks-linux-demo-cookbooks-nodejs.</description>
    </item>
    
    <item>
      <title>Aws Ground Station</title>
      <link>https://hugotkk.github.io/posts/aws-ground-station/</link>
      <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-ground-station/</guid>
      <description>https://www.youtube.com/watch?v=_MwNgO0aJo0
https://www.youtube.com/watch?v=namlZpQ6W_k</description>
    </item>
    
    <item>
      <title>EC2 Bandwidth test</title>
      <link>https://hugotkk.github.io/posts/bandwidth-test/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/bandwidth-test/</guid>
      <description>Objective  Test if the ec2 can reach 10Gbps bandwidth in same placement group Test if the 10Gbps is the limited by the ec2 instance type or aws  AWS Limit https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html
in single-flow traffic,
 placement group: 10Gbps w/o placement group: 5Gbps  flow = worker (thread) in the network driver. depends on the ec2 instance type.
EC2 Instance Type Limit https://aws.amazon.com/ec2/instance-types/m5/
m5.8xlarge can reach 10Gbps
Setup Created 3 m5.</description>
    </item>
    
    <item>
      <title>AWS EKS Workshop</title>
      <link>https://hugotkk.github.io/posts/aws-workshop/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-workshop/</guid>
      <description>Day1 Setup  https://www.eksworkshop.com/020_prerequisites/ec2instance https://www.eksworkshop.com/030_eksctl/launcheks https://www.eksworkshop.com/beginner/060_helm/helm_intro/install  Tasks  Deploy simple application Fargate  Notes There are 2 modes in EKS:
 EC2 Fargate  They can coexist in EKS.
Also we can only fargate only. When we deploy plugins to the cluster, It will be deployed to the control panel. (hidden from user)
How to use fargate in EKS:  create a fargate profile which is associated with a namespace deploy yml to that namespace  Pros and Con of fargate can be scaled up quickly  it is a micro vm as similar as pod one fargate instance per pod  lower cost of fargate  Fargate will be cheaper in some situations.</description>
    </item>
    
    <item>
      <title>AWS Managed Blockchain</title>
      <link>https://hugotkk.github.io/posts/aws-managed-blockchain/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-managed-blockchain/</guid>
      <description>Pros with AWS Managed Blockchain  no need to build the ledger by themself focus on the smart contract a single blockchain network can effectively work cross multiple parties  An Overview on Blockchain Services from AWS https://www.youtube.com/watch?v=WAIOBeQA2QQ
 ledger database (immutable transaction) consenus decentlization smart contract ease for audit  Hyperledger Fabric VS eth  authentication access control private ledger  </description>
    </item>
    
    <item>
      <title>EKS vs AKS</title>
      <link>https://hugotkk.github.io/posts/eks-vs-aks/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/eks-vs-aks/</guid>
      <description>Control Panel Fee  AKS: 0 EKS: fixed charge 0.1 USD / Hour  Integration I think AKS is better, most of the provisioning plugins can be enabled by one click
In aws, you need to
 install plugins setup iam service account for the plugins to access AWS service  application routing For AKS,
 it is just an checkbox option  For EKS, you need to
 setup IAM OICD setup external dns setup ALB contrller  auto scaler Same as application routing -&amp;gt; auto scaler.</description>
    </item>
    
    <item>
      <title>AWS Certified Advanced Networking - Specialty</title>
      <link>https://hugotkk.github.io/posts/aws-certified-advanced-network/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-certified-advanced-network/</guid>
      <description>Resources  Exam Landing Page Sample Questions Exam Guide udemy course udemy mock exam whizlabs test &amp;amp; hand-on labs  TODO  take notes revision whizlabs mocks (by topic) mock 1 (udemy) mock 2,3,4 (whizlabs) examtopic udemy quiz + exercise  Revision The numbers below are the page no of the udemy course&amp;rsquo;s pdf: AWS Certified Networking Specialty Slides v1.1.
Summary  DNS (151) Advanced Networking (188) VPC Endpoint (292, 298) Site-to-site VPN (347, 401, 407) VPN Tunnels and Routing (348, 352) DX Gateway with VGW (532) DX with TGW (547) DX Billing (624) DX (630) Troubleshooting in DX (626) Gateway Load Balancer (816)  Q &amp;amp; A  ALB (677) DX (625)  Good to know  SG (46) BYOIP (90) VPC Traffic Mirroring (105) DHCP Option Sets (124) TGW (251) AWS Site-to-Site VPN (403) Network Load Balancer (656)  Comparisons  private, public and EIP (33) IPv4, IPv6 (36) NACL, SG (48) NAT Gateway, Instance (64) VPC Peering vs Transit Gateway Cloudfront function vs lambda@edge (703) AWS global accelerator vs Cloudfront (711)  Exam Essential  VPC Fundamentals (67) Advanced VPC (190) VPC Peering Endpoint (301) AWs Site-to-Site VPN (402) Direct Connect (632) Firewall (806) Gateway Load Balancer (817)  Revision by topic Playlists  global accelerator api gateway client vpn cloudformation cloudfront cloudwatch cloudhsm cognito config dx edge computing elb firehose guarduty inspector lambda organization route53 s3 sqs ssm vpc vpn waf workspace  References  accelerator - custom routing accelerator - custom routing alb - limit request to clondfront only aurora - regional failover aws organization - SCP cloudfront - origin types cloudfront - signed url vs signed cookies cloudfront - troubleshooting cloudfront - will forward the response when first byte arrives from the origin cloudhsm - auto ha cloudtrail - 5 trails for region cloudtrail - log encryption with KMS cloudtrail - use integrity validation to check the log was modified, delete or change cloudwatch - namespace valid characters cloudwatch - no need to config sns to provide data every minute cloudwatch - skip metrics config - managed rules config - renaming the delivery channel config - requirements config - type of triggers config - viewing configuration compliance costs model costs model 2 dhcp - cannot modify and one vpc one dhcp options dx - dx in public regions can access any other public region dx - faq dx - lag requirement 1 dx - lag requirement 2 dx - public vif dx - public vif connectivity dx - quotas dx - requirements for virtual interfaces dx - vif dx - virtual Interfaces to Direct Connect connections or LAG bundles dx - vpn as backup ec2 - http proxy ec2 - network performance ec2 - retrieve instance metadata eip - hostname will be changed once eip attached eip - public ip change every time stop and start the instance eip - public ip will be released once eip attached eip - reverse dns record for mailserver eni - limitation flow log local zone - alb limitation local zone - supported service ms ad - limitation - not compatible with exchange and skype ms ad - requirements nacl - default rule# in nacl nat - need egress-only-internet-gateway for ipv6 to ipv6 commnuication nat - only support tcp udp and icmp nat - pricing nat - tcp connectin fail as tcp does not support ip fragmentation placement group - can add / move / remove instance from group placement group - can launch with diff instance type but not recommended placement group - can span vpcs placement group - cannot merge placement group placement group - stop and start is fine but may have insufficient capacity error without capacity reservation quicksight - private connection with rds redishift - private connectivity with enhanced vpc routing route53 - a/p failover route53 - aws services which support alias records route53 - can attach private hosted zone with overlapping namespace in same vpc route53 - dns resolution b/w on-premise and aws with ad route53 - dns server with custom domain (white-labe and reusable delegation set) route53 - health check rules route53 - system rules when forwarding less specific domain simple ad - requirement sns tgw - peering tgw - quotas tgw - route table priority vpc - aws cidr tier vpc - aws does not support broadcast in vpc vpc - ipv4 subnet cidr prefix vpc - ipv6 subnet cidr prefix vpc - jumbo frame packet drop as Don&#39;t Fragment flag is set but the network does not support higher MTU vpc - multicast support vpc - reserved address in cidr vpc - route table qutoa vpc - route table troubleshoot vpc - usage of enableDnsHostnames and enableDnsSupport vpce - service endpoint support ipv4 over tcp only vpce - tagging is suported vpce - use prefix list in security group vpn - ipv6 support on tgw but not vgw vpn - static route a/p mode (priority) vpn - troubleshooting vpn - why cannot overlap the cidr vpn -ipsec encryption algorithms waf - config count action to test (monitor mode) waf - rule statement list workspaces - requirements appliance in shared vpc cloudhub mult vpc with single customer gateway multi-vpc network infrastructure route table options shared vpc transit vpc Virtual Private Cloud Connectivity Options vpc peering with cidr overlap vpc with subnet overlapping  VPC Fundamentals (17) What is TCP/IP?</description>
    </item>
    
  </channel>
</rss>
