<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>blockchain on Hugo</title>
    <link>https://hugotkk.github.io/tags/blockchain/</link>
    <description>Recent content in blockchain on Hugo</description>
    <image>
      <url>https://hugotkk.github.io/papermod-cover.png</url>
      <link>https://hugotkk.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 28 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://hugotkk.github.io/tags/blockchain/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Atomic cross chain swap between Hyperledger Fabric and Ethereum</title>
      <link>https://hugotkk.github.io/posts/cross-chain-swap/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/cross-chain-swap/</guid>
      <description>https://www.youtube.com/watch?v=j_j2MiAxUvY&amp;amp;list=PL0MZ85B_96CEmmy0C6NF52ZCMNcY1Wryf
Methods Wait until the transaction is completely settled not practical and safe
Hashlock The transaction is partially complete
Settle once the sender publishes the key on the blockchain.
Cons  hugo cannot refund if kevin does not response  Timelock  hugo made a partial transaction that the btc can be claimed by kevin within n number of blocks if the transaction is expired, hugo can claim back the fund  Cons  the claims need to execute manually  HTLC (Hash Time Lock Contract) Combine two locks: (and)</description>
    </item>
    
    <item>
      <title>Hyperledger composer</title>
      <link>https://hugotkk.github.io/posts/hyperledger-composer/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/hyperledger-composer/</guid>
      <description>Building BLOCKCHAIN Apps With HYPERLEDGER COMPOSER https://www.youtube.com/watch?v=gAxK6zYrfxI
a framework of hyperledger
 testing - mocha / chai webapp generator - Yeoman api generation - Rest Server + loopback api doc generation - swagger auth (rest api) - passport integration with IOT - red-node  </description>
    </item>
    
    <item>
      <title>Node Red</title>
      <link>https://hugotkk.github.io/posts/node-red/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/node-red/</guid>
      <description>Official Website
Playlist
a visual editor to build workflow and ui application to interact with IoT
 wire the IoTs and user (with web dashboard) read data from IoT write data to IoT (control it, on and off etc) build a flow among IoTs and users for automation build dashboard UI  all can be done by drag and drop
can be used with blockchain in the supply chain&amp;hellip;
node red pulls the data from sensors and submits to blockchain automatically</description>
    </item>
    
    <item>
      <title>AWS Managed Blockchain</title>
      <link>https://hugotkk.github.io/posts/aws-managed-blockchain/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/aws-managed-blockchain/</guid>
      <description>Pros with AWS Managed Blockchain  no need to build the ledger by themself focus on the smart contract a single blockchain network can effectively work cross multiple parties  An Overview on Blockchain Services from AWS https://www.youtube.com/watch?v=WAIOBeQA2QQ
 ledger database (immutable transaction) consenus decentlization smart contract ease for audit  Hyperledger Fabric VS eth  authentication access control private ledger  </description>
    </item>
    
    <item>
      <title>Hyperledger fabric</title>
      <link>https://hugotkk.github.io/posts/hyperfabric-ledger/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/hyperfabric-ledger/</guid>
      <description>Installation https://hyperledger-fabric.readthedocs.io/en/release-2.2/install.html node go docker fabric fabric-ca third party image: kafka, zookeeper, couchdb fabric-ca-binary</description>
    </item>
    
    <item>
      <title>Blockchain use cases</title>
      <link>https://hugotkk.github.io/posts/blockchain-use-case/</link>
      <pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hugotkk.github.io/posts/blockchain-use-case/</guid>
      <description>Trust Over IP: Hyperledger Ursa, Indy, and Aires https://www.youtube.com/watch?v=FfuhlF9ZYPM
Notes  prove the credential without CA trusted issuer (eg: gov) issues the identity token (eg: driving license) -&amp;gt; send it to a crypto account (like sending btc to someone) on the blockchain, it shows a record that the account owns that license. (like you can check your btc balance / NFS on chain explorer) anyone can request that you own that account (like an approval transaction from dapp).</description>
    </item>
    
  </channel>
</rss>
