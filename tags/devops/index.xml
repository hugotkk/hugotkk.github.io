<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on Hugo's IT journal</title><link>https://hugotkk.github.com/tags/devops/</link><description>Recent content in devops on Hugo's IT journal</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 29 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hugotkk.github.com/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>S3</title><link>https://hugotkk.github.com/posts/s3/</link><pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/s3/</guid><description>Public Access Object Setup with ACL &amp;amp; Bucket Policy:> Public Access Object Setup with ACL &amp;amp; Bucket Policy: # Using ACL:> Using ACL: # Disable block public access ACL at bucket level.</description></item><item><title>AWS Certified DevOps Engineer - Professional</title><link>https://hugotkk.github.com/posts/devops/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/devops/</guid><description>DevOps choices> DevOps choices # Deployment> Deployment # faster boot time - opsworks slower; ami faster using chef - opsworks need to update config when new node online - opsworks Configure lifecycle event less administrative overhead: eb &amp;gt; cloudformation when both solutions works auto healing: opsworks, codedeploy, eb (bcoz of the asg) rolling: eb, opsworks (not ideal, it is manual deploy), cloudformation+asg+ AutoScalingRollingUpdate policy, codedeploy rolling = drop traffic to n instance &amp;gt; deploy &amp;gt; allow traffic in-place = deploy the deploy to all instances (parallel) blue/green deployment: eb ( cname swap), codedeploy, 2x(cfn+asg+elb)+route53 or 2(cfn+asg)+elb(weighted target groups) blue/green deployment and want to delay the old asg termination: codedeploy canary deployment: codedeploy only on lambda / ecs, eb ( traffic splitting), api gateway eb&amp;rsquo;s immutable deployment: create 2nd asg.</description></item><item><title>Aurora</title><link>https://hugotkk.github.com/posts/aurora/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/aurora/</guid><description>RDS Read Replica> RDS Read Replica # cross AZ: OK cross region: OK promote / point-in-time recovery / restore from snapshot will create a new db instance which is not in my expectation.</description></item><item><title>AWS Config</title><link>https://hugotkk.github.com/posts/config/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/config/</guid><description>config aggregator> config aggregator # aggreagate all account under organization> aggreagate all account under organization # enable service role in organization
set up iam with
viewing the organization service role give config.</description></item><item><title>AWS Elastic Beanstalk</title><link>https://hugotkk.github.com/posts/eb/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/eb/</guid><description>eb> eb # eb init eb use web_dev eb list deploy code in repo
eb deploy web_dev edit config
eb config web_dev save config
eb config save apply save config</description></item><item><title>AWS Organization</title><link>https://hugotkk.github.com/posts/aws-organization/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/aws-organization/</guid><description>aws org> aws org # o = organization = it9 r = root = root ou = organization unit = dev / prod / uat / management / network ou path: o-3ywbznlomt/r-t9g3/ou-t9g3-knls7nau/</description></item><item><title>Opsworks</title><link>https://hugotkk.github.com/posts/opsworks/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/opsworks/</guid><description>OpsWorks> OpsWorks # stack = cookbooks layer = frontend, backend, api, rds (how to config to instance) app = source code. can deploy and redeploy Stack> Stack # I am exploring this cookbook from aws The nodejs demo cookbook repo does not include its dependencies In the opsworks demo, it uses opsworks-linux-demo-cookbooks-nodejs.</description></item></channel></rss>