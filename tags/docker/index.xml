<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Hugo's IT journal</title><link>https://hugotkk.github.com/tags/docker/</link><description>Recent content in docker on Hugo's IT journal</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 06 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hugotkk.github.com/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>[Note] Linux Virual Networking</title><link>https://hugotkk.github.com/posts/linux-virtual-network/</link><pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/linux-virtual-network/</guid><description>This post explores various networking concepts and configurations for Linux systems, including:
bridging VLAN filtering IPvlan Vxlan These concepts are useful for creating and managing virtual networks.
I&amp;rsquo;m sharing this information based on my own interest and learning experiences.</description></item><item><title>Mistake when updating docker-compose.yml</title><link>https://hugotkk.github.com/posts/mistake-when-updating-docker-compose/</link><pubDate>Fri, 05 May 2023 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/mistake-when-updating-docker-compose/</guid><description>After updating the command or env parameters in docker-compose.yml file, I restarted the container with docker-compose restart to make the change effect.
However, I realize that the changes were not applied, and the container is still using the old config.</description></item><item><title>Network ACL in Containers for Virtual Networking Labs</title><link>https://hugotkk.github.com/posts/network-acl-in-containers-for-virtual-networking-labs/</link><pubDate>Fri, 05 May 2023 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/network-acl-in-containers-for-virtual-networking-labs/</guid><description>To set up a virtual networking lab on docker, I need to have the right to modify the network interface.
One way to achieve this is by running a Docker container with the --cap-add=NET_ADMIN flag, which grants the container the ability to configure network interfaces.</description></item><item><title>Docker Volume Mounting: Permissions and Ownership Explained</title><link>https://hugotkk.github.com/posts/docker-volume-mounting-permissions-and-ownership-explained/</link><pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/docker-volume-mounting-permissions-and-ownership-explained/</guid><description>There are two ways to mount volumes in Docker:
Hostpath: docker run -it --rm -v $PWD/myvol:/app ubuntu Volume: docker volume create myvol docker run -it --rm -v myvol:/app ubuntu When dealing with volume ownership, incorrect folder ownership can cause the container to crash, requiring time to debug logs.</description></item><item><title>Networking in Docker and Kubernetes: Port Expose and Pod Communication</title><link>https://hugotkk.github.com/posts/networking-in-docker-and-kubernetes-port-expose-and-pod-communication/</link><pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/networking-in-docker-and-kubernetes-port-expose-and-pod-communication/</guid><description>Docker> Docker # ubuntu@ip-172-31-6-200:~$ docker run --rm -it -P httpd ubuntu@ip-172-31-6-200:~$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6f6f53ee7dde httpd &amp;#34;httpd-foreground&amp;#34; 12 seconds ago Up 10 seconds 0.</description></item><item><title>Docker</title><link>https://hugotkk.github.com/posts/docker/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><guid>https://hugotkk.github.com/posts/docker/</guid><description>Dockerfile> Dockerfile # Most containers are not well-documented, making it hard to find essential information about them on Docker Hub or GitHub&amp;rsquo;s README. Some of the critical information to know includes:</description></item></channel></rss>